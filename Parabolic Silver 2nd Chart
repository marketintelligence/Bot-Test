// Double sided entry at 2nd chart (Done)
// This is da bot, nee to do it, if possible brings trailing down further.
// Leave it to the entry system and see first)If the positioned opened is a sell might want to keep selling? (I think it's about right) - don't want to have 2 reverse positioned stucked
// Make sure trailing stop worked for the other position (Trailing 2 added)
// Trailing stop point problem checked (Trailing stop 3 points) if price goes 10 can tp at 9, if price goes 5 can tp at break even
// Need to check price median conversion if it's correct or not.
// Entry logic checked
// Order count added order magic number.



#property copyright "Copyright 2018, Cheah Boo Lim"
#property link      "https://fxforex-trading.com/"
#property version   "58.00"
#property strict


input string         UsefulFunction ="Useful Function";
input int            MagicNumber  = 1982;    //Magic Number
input int            MagicNumber2 = 1991;    // Magic Number 2
input double         Lots         = 0.01;    //Fixed Lots
input double         StopLoss     = 100;      //Fixed Stop Loss (in Points)
input double         Risk         = 1;       // Risk Level (1 - 3)
input double         TakeProfit   = 0;       //Fixed Take Profit (in Points)
input double         TrailingStop = 0.2;     //Trailing Stop (in Points)
input double         Waiting_Time = 0;       // Waiting time (In Seconds)
input int            Recover_Loss = 0;       // 1 = Open 0 = Close

//-------------------------------------------------------------------------
// Inputs
//-------------------------------------------------------------------------
input string         TrailingFunction ="Tralling Function";
input int TS = 5;                  //Trailing Stop (in Points)
input bool UC = false;              //Use Certain Order Comment
input string Comm = "";             //Certain Order Comment
input bool UM = false;              //Use Certain Order Magic Number
input int Magic = 12345;            //Certain Order Magic Number
//-------------------------------------------------------------------------
// Variables
//-------------------------------------------------------------------------
double pip;
bool w;

input double      nspread      = 9;       // Normal Spread

input string      aaaaaaaaaa="* EA Settings:";
input bool        Market_Execution=true;   // ECN, NDD etc
input bool        Write_Journal=true;

input string      Trade_Hours="* Trade Hours:";
input int         session1= 0;     // London Session Starts
input int         session1end= 24;     // After 3 Hours
input int         session2 = 13;  // New York Seeions Starts
input int         session2end =17;     // After 6 Hours
input int         session3 = 17;  // New York Seeions Starts
input int         session3end =24;     // After 6 Hours

// For Per Candle Usage
datetime LastActiontime;


//---
int    Slippage=0;

//+------------------------------------------------------------------+
//| Expert Initialization function                                 |
//+------------------------------------------------------------------+

int OnInit()
  {
//---
   
//---
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
   Print("You're using Boo Lim Scalper");
  }
//+------------------------------------------------------------------+
//|   expert OnTick function                                         |
//+------------------------------------------------------------------+
void OnTick()
  {
   double TheStopLoss=0;
   double TheTakeProfit=0;
   double MyPoint=Point;
   double Current_Hour = Hour();
   int i =OrdersHistoryTotal()-1;
   OrderSelect(i,SELECT_BY_POS,MODE_HISTORY);
   int Previoustime =OrderCloseTime();
   int CurrentTime =TimeCurrent();
   double TimeDifference =CurrentTime-Previoustime;
   int    cspread = (int)MarketInfo(Symbol(),MODE_SPREAD);
   double   price = (Bid+Ask)/2;
   
//+------------------------------------------------------------------+
//|  AUTO LOT SIZING                                                 |
//+------------------------------------------------------------------+
   
   double Lot= AccountBalance()/(Risk*1000);


   if(Digits==4 || Digits<=2) pip=Point;
//   if(Digits==5 || Digits==3) pip=Point*10;// silver is 3 digit (so considered removed)
   
//+------------------------------------------------------------------+
//|  Parabolic SAR Funtion                                           |
//+------------------------------------------------------------------+

   double sar0  =iSAR(NULL,0,0.02,0.2,0);
   double sar1  =iSAR(NULL,0,0.02,0.2,1);
   double sar2  =iSAR(NULL,0,0.02,0.2,2); // Anchor SAR

   
//+------------------------------------------------------------------+
//|  Candle Funtion                                                  |
//+------------------------------------------------------------------+

   double mid0 = (High[0]+Low[0])/2;
   double mid1 = (High[1]+Low[1])/2;
   double mid2 = (High[2]+Low[2])/2;
 
//+------------------------------------------------------------------+
//|  ORDER COUNT LESS THAN 1                                         |
//+------------------------------------------------------------------+

   if(TotalOrdersCount()==0)
   
     {
     
      int result=0;
   
                
//+------------------------------------------------------------------+
//|               MAIN SESSION ENDS                                 |
//+------------------------------------------------------------------+

   if( 
      
      (Hour()>0)
      
      )
      
         {
         
               Comment

               (
   
                  " Trading Hour ",
                  " Current Time ", Hour(),
                  " Volume ", Volume[0],
                  " Bid ", Bid, // Buyer's Price
                  " Ask ", Ask,  // Seller's Price,
                  " SAR 0 ", sar0,
                  " Mid 0 ", mid0,
                  " SAR 1 ", sar1,
                  " Mid 1 ", mid1,
                  " SAR 2 ", sar2,
                  " Mid 2 ", mid2,
                  " Spread ", cspread, // current spread
                  " Previous Profit ", OrderProfit(),
                  " Account Balance ", AccountBalance()
                
                );
  
      //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~BUY~1~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      
   if(  // Buy when market have strong buy
   
      (sar2>mid2)&& // Anchot
      (sar1<mid1)&& // First Chart Loaded
      (sar0<price)&&// Breakout 
      (High[1]>price) // Pull Back?
      
      )
      {
              Comment

               (
   
                  " BUY ORDER "
                  " Ask ", Ask,
                  " SAR 0 ", sar0,
                  " Mid 0 ", mid0,
                  " SAR 1 ", sar1,
                  " Mid 1 ", mid1,
                  " SAR 2 ", sar2,
                  " Mid 2 ", mid2,
                  " Server Time ", TimeCurrent(),
                  " Spread ", cspread, // current spread
                  " Previous Profit ", OrderProfit(),
                  " Account Balance ", AccountBalance()
                
                );
                  
           if(cspread<nspread) // SPREAD MUST BE HIGHER THAN AVERAGE
                     
            {
                  
                 result=OrderSend(Symbol(),OP_BUY,Lot,Ask,Slippage,0,0,"BUY 1",MagicNumber,0,clrLightGreen);
                                    
                 if(result>0)
                  
                     {
                        TheStopLoss=0;
                        TheTakeProfit=0;
                        if(TakeProfit > 0) TheTakeProfit = Ask + TakeProfit * MyPoint;
                        if(StopLoss > 0)   TheStopLoss   = Ask - StopLoss * MyPoint;
                        int MyOrderSelect = OrderSelect(result,SELECT_BY_TICKET);
                        int MyOrderModify = OrderModify(OrderTicket(),OrderOpenPrice(),NormalizeDouble(TheStopLoss,Digits),
                                                  NormalizeDouble(TheTakeProfit,Digits),0,Green);
                     }
             }
             
             else
             
             Comment(" Spread too High ");
        }
      //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SELL~1~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      
  if (  // Buy when market have strong buy
  
      (sar2<mid2)&& // Anchor
      (sar1>mid1)&& // First Chart Loaded
      (sar0>price)&&// Current Charts is uptrend 
      (Low[1]<price) // Pull Back?
      
      )
        {
        
        Comment

               (
   
                  " SELL ORDER "
                  " Ask ", Ask,
                  " SAR 0 ", sar0,
                  " SAR 1 ", sar1,
                  " SAR 2 ", sar2,
                  " Server Time ", TimeCurrent(),
                  " Spread ", cspread, // current spread
                  " Previous Profit ", OrderProfit(),
                  " Account Balance ", AccountBalance()
                
                );
               
         if(cspread>nspread) // SPREAD MUST BE HIGHER THAN AVERAGE
                     
           {

                  result=OrderSend(Symbol(),OP_SELL,Lot,Bid,Slippage,0,0,"SELL 1",MagicNumber,0,clrLightPink);
               
                  if(result>0)
                     
                     {
                        TheStopLoss=0;
                        TheTakeProfit=0;
                        if(TakeProfit > 0) TheTakeProfit = Bid - TakeProfit * MyPoint;
                        if(StopLoss > 0)   TheStopLoss   = Bid + StopLoss * MyPoint;
                        int MyOrderSelect = OrderSelect(result,SELECT_BY_TICKET);
                        int MyOrderModify = OrderModify(OrderTicket(),OrderOpenPrice(),NormalizeDouble(TheStopLoss,Digits),
                                                  NormalizeDouble(TheTakeProfit,Digits),0,Green);
                     }
                        
            }
                  
           else
                
           Comment("Spread is too High, Spread Value Now is ", cspread);
   
       }
       
       else
       
           Comment

               (
   
                  " NO ORDER - Trading Time ",
                  " Server Time ", Hour(),
                  " Ask ", Ask,
                  " Bid ", Bid,
                  " SAR 0 ", sar0,
                  " SAR 1 ", sar1,
                  " SAR 2 ", sar2,
                  " Server Time ", TimeCurrent(),
                  " Spread ", cspread, // current spread
                  " Previous Profit ", OrderProfit(),
                  " Account Balance ", AccountBalance()
                
                );
     }
//+------------------------------------------------------------------+
//|               MAIN SESSION ENDS                                  |
//+------------------------------------------------------------------+
  }
  
//+------------------------------------------------------------------+
//|              MAIN ENTRY FUNCTION ENDS                            |
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|              TRAILING FUNCTION 1                                 |
//+------------------------------------------------------------------+
// Need to read through

   for(i=0;i<OrdersTotal();i++)
     {
      if(OrderSelect(i,SELECT_BY_POS,MODE_TRADES)==true)
        {
         if(OrderSymbol()==Symbol() && TS>0 && OrderProfit()>0 && OrderMagicNumber()==MagicNumber)
           {
            if(UC==true && OrderComment()==Comm && UM==true && OrderMagicNumber()==MagicNumber && OrderType()==OP_BUY && OrderOpenPrice()+TS*pip<=Bid && OrderStopLoss()<Bid-TS*pip) w=OrderModify(OrderTicket(),OrderOpenPrice(),Bid-TS*pip,OrderTakeProfit(),0,clrAquamarine);
            if(UC==true && OrderComment()==Comm && UM==true && OrderMagicNumber()==MagicNumber && OrderType()==OP_SELL && OrderOpenPrice()-TS*pip>=Ask && (OrderStopLoss()>Ask+TS*pip || OrderStopLoss()==0)) w=OrderModify(OrderTicket(),OrderOpenPrice(),Ask+TS*pip,OrderTakeProfit(),0,clrAquamarine);
            if(UC==true && OrderComment()==Comm && UM==false && OrderType()==OP_BUY && OrderOpenPrice()+TS*pip<=Bid && OrderStopLoss()<Bid-TS*pip) w=OrderModify(OrderTicket(),OrderOpenPrice(),Bid-TS*pip,OrderTakeProfit(),0,clrAquamarine);
            if(UC==true && OrderComment()==Comm && UM==false && OrderType()==OP_SELL && OrderOpenPrice()-TS*pip>=Ask && (OrderStopLoss()>Ask+TS*pip || OrderStopLoss()==0)) w=OrderModify(OrderTicket(),OrderOpenPrice(),Ask+TS*pip,OrderTakeProfit(),0,clrAquamarine);
            if(UC==false && UM==true && OrderMagicNumber()==MagicNumber && OrderType()==OP_BUY && OrderOpenPrice()+TS*pip<=Bid && OrderStopLoss()<Bid-TS*pip) w=OrderModify(OrderTicket(),OrderOpenPrice(),Bid-TS*pip,OrderTakeProfit(),0,clrAquamarine);
            if(UC==false && UM==true && OrderMagicNumber()==MagicNumber && OrderType()==OP_SELL && OrderOpenPrice()-TS*pip>=Ask && (OrderStopLoss()>Ask+TS*pip || OrderStopLoss()==0)) w=OrderModify(OrderTicket(),OrderOpenPrice(),Ask+TS*pip,OrderTakeProfit(),0,clrAquamarine);
            if(UC==false && UM==false && OrderType()==OP_BUY && OrderOpenPrice()+TS*pip<=Bid && OrderStopLoss()<Bid-TS*pip) w=OrderModify(OrderTicket(),OrderOpenPrice(),Bid-TS*pip,OrderTakeProfit(),0,clrAquamarine);
            if(UC==false && UM==false && OrderType()==OP_SELL && OrderOpenPrice()-TS*pip>=Ask && (OrderStopLoss()>Ask+TS*pip || OrderStopLoss()==0)) w=OrderModify(OrderTicket(),OrderOpenPrice(),Ask+TS*pip,OrderTakeProfit(),0,clrAquamarine);
           }
        }
     }
     
//+------------------------------------------------------------------+
//|              TRAILING FUNCTION 2                                 |
//+------------------------------------------------------------------+
// Need to read through

   for(i=0; i<OrdersTotal();i++)
     {
      if(OrderSelect(i,SELECT_BY_POS,MODE_TRADES)==true)
        {
         if(OrderSymbol()==Symbol() && TS>0 && OrderProfit()>0 && OrderMagicNumber()==MagicNumber2)
           {
            if(UC==true && OrderComment()==Comm && UM==true && OrderMagicNumber()==MagicNumber2 && OrderType()==OP_BUY && OrderOpenPrice()+TS*pip<=Bid && OrderStopLoss()<Bid-TS*pip) w=OrderModify(OrderTicket(),OrderOpenPrice(),Bid-TS*pip,OrderTakeProfit(),0,clrGoldenrod);
            if(UC==true && OrderComment()==Comm && UM==true && OrderMagicNumber()==MagicNumber2 && OrderType()==OP_SELL && OrderOpenPrice()-TS*pip>=Ask && (OrderStopLoss()>Ask+TS*pip || OrderStopLoss()==0)) w=OrderModify(OrderTicket(),OrderOpenPrice(),Ask+TS*pip,OrderTakeProfit(),0,clrGoldenrod);
            if(UC==true && OrderComment()==Comm && UM==false && OrderType()==OP_BUY && OrderOpenPrice()+TS*pip<=Bid && OrderStopLoss()<Bid-TS*pip) w=OrderModify(OrderTicket(),OrderOpenPrice(),Bid-TS*pip,OrderTakeProfit(),0,clrGoldenrod);
            if(UC==true && OrderComment()==Comm && UM==false && OrderType()==OP_SELL && OrderOpenPrice()-TS*pip>=Ask && (OrderStopLoss()>Ask+TS*pip || OrderStopLoss()==0)) w=OrderModify(OrderTicket(),OrderOpenPrice(),Ask+TS*pip,OrderTakeProfit(),0,clrGoldenrod);
            if(UC==false && UM==true && OrderMagicNumber()==MagicNumber2 && OrderType()==OP_BUY && OrderOpenPrice()+TS*pip<=Bid && OrderStopLoss()<Bid-TS*pip) w=OrderModify(OrderTicket(),OrderOpenPrice(),Bid-TS*pip,OrderTakeProfit(),0,clrGoldenrod);
            if(UC==false && UM==true && OrderMagicNumber()==MagicNumber2 && OrderType()==OP_SELL && OrderOpenPrice()-TS*pip>=Ask && (OrderStopLoss()>Ask+TS*pip || OrderStopLoss()==0)) w=OrderModify(OrderTicket(),OrderOpenPrice(),Ask+TS*pip,OrderTakeProfit(),0,clrGoldenrod);
            if(UC==false && UM==false && OrderType()==OP_BUY && OrderOpenPrice()+TS*pip<=Bid && OrderStopLoss()<Bid-TS*pip) w=OrderModify(OrderTicket(),OrderOpenPrice(),Bid-TS*pip,OrderTakeProfit(),0,clrGoldenrod);
            if(UC==false && UM==false && OrderType()==OP_SELL && OrderOpenPrice()-TS*pip>=Ask && (OrderStopLoss()>Ask+TS*pip || OrderStopLoss()==0)) w=OrderModify(OrderTicket(),OrderOpenPrice(),Ask+TS*pip,OrderTakeProfit(),0,clrGoldenrod);
           }
        }
     }
  }
//+------------------------------------------------------------------+
//|   expert TotalOrdersCount function                               |
//+------------------------------------------------------------------+
int TotalOrdersCount()
  {
   int result=0;

   for(int i=0; i<OrdersTotal(); i++)
     {
      int MyOrderSelect=OrderSelect(i,SELECT_BY_POS,MODE_TRADES);
      if(OrderMagicNumber()==MagicNumber) result++;
     }

//---
   return (result);
  }
  
